<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="cb3ac420-3d79-487e-bd14-02abc9ed3ce7" activeEnvironment="Default" name="IBSO" resourceRoot="" soapui-version="5.5.0" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="50d12787-1f7b-4da1-85e8-d1dd9e2672ff" wadlVersion="http://wadl.dev.java.net/2009/02" name="IBSO" type="rest" basePath="/ABISWebServerRS/api/" definitionUrl="http://localhost:8080/ABISWebServerRS/api/application.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>http://BSB15-W14:8080/</con:endpoint><con:endpoint>http://localhost:8080</con:endpoint></con:endpoints><con:resource name="abis" path="abis" id="450954bf-efce-4b92-b339-88319b2310cd"><con:settings/><con:parameters/><con:resource name="client/" path="client/" id="037f532b-bf78-497c-b53d-f28d9029922e"><con:settings/><con:parameters/><con:method name="POST - getClientInfo" id="2ab3c20e-b1c3-447a-bbeb-73ccf4aac8f0" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="fa5efcc3-7930-4b44-8e20-dc3e9fa672a0" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8080</con:endpoint><con:request>{
	"ibsoId":"123456", "agreement":"1"
}</con:request><con:originalUri>http://localhost/ABISWebServerRS/api/abis/client/</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="client/credit" path="client/credit" id="ffaf02be-0eec-4ab3-bb85-a0b817da153a"><con:settings/><con:parameters/><con:method name="POST - getClientCredits" id="ca1d9008-9a97-4267-81a2-0b5cfc22d9d7" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="b833ee11-260f-4ca5-b45e-4ff403b1a5aa" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8080</con:endpoint><con:request>{
	"ibsoId":"123456"
}</con:request><con:originalUri>http://localhost/ABISWebServerRS/api/abis/client/credit</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="client/account" path="client/account" id="48bd93a6-eeb4-4838-a29d-3732b2febfcb"><con:settings/><con:parameters/><con:method name="POST - getClientAccounts" id="862723ea-5e6d-4795-acf4-1d0f499a3097" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="72b6dfd8-be09-4b7b-bf0d-df0b77afb0ad" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8080</con:endpoint><con:request>{
	"ibsoId":"123456"
}</con:request><con:originalUri>http://localhost/ABISWebServerRS/api/abis/client/account</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:resource></con:interface><con:restMockService id="8df64496-4fc7-4df8-98b6-6738e303b486" port="8080" path="/" host="BSB15-W14" name="REST MockService GetClientInfo"><con:settings/><con:properties/><con:restMockAction name="/ABISWebServerRS/api/abis/client/" method="POST" resourcePath="/ABISWebServerRS/api/abis/client/" id="6b01a987-b8fb-4a88-9d02-1fd695194634"><con:settings/><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 1" id="449d08dc-3b1c-44f5-8510-ccd8cb590f5b" httpResponseStatus="200" mediaType="application/json" encoding="UTF-8"><con:settings/><con:responseContent>{"client":{"accounts":[],"agreement":"1","certificates":[{"dateBegin":"02-05-2016","dateEnd":"01-05-2026","number":"032123123","type":"Удост.","who":"МВД РК, "}],"contacts":[{"number":"(701)6595981","type":"Телефон мобильный"},{"number":"(712)2519413","type":"Телефон домашний"},{"number":"(771)8531601","type":"Телефон мобильный"},{"number":"(727)1234564","type":"Телефон домашний"}],"credits":[],"firstName":"әіңғүұқөһ","ibsoId":"38010233104","iin":"811106300999","lastName":"КАРАБАЛИН","surName":"КУРМАНГАЛИЕВИЧ"}}</con:responseContent><con:header><con:name>Server</con:name><con:value>GlassFish Server Open Source Edition  5.0</con:value></con:header><con:header><con:name>X-Powered-By</con:name><con:value>Servlet/3.1 JSP/2.3 (GlassFish Server Open Source Edition  5.0  Java/Oracle Corporation/1.8)</con:value></con:header></con:response></con:restMockAction></con:restMockService><con:restMockService id="49734e89-55da-4026-8e09-d44c6bad9d22" port="8080" path="/" host="BSB15-W14" name="REST MockService getClientCredits"><con:settings/><con:properties/><con:restMockAction name="/ABISWebServerRS/api/abis/client/credit" method="POST" resourcePath="/ABISWebServerRS/api/abis/client/credit" id="91fb1a27-8741-41ef-ade7-4014730c4611"><con:settings/><con:defaultResponse xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 1" id="52167865-9ce1-400f-9009-f940b44c11e1" httpResponseStatus="200" mediaType="application/json" encoding="UTF-8"><con:settings/><con:responseContent>{"client":{"accounts":[],"credits":[{"beginDate":"02-10-2017","currencyDog":"KZT","endDate":"02-10-2020","filialDog":"001","giveDate":"02-10-2017","numberAccount":"KZ464321403398A00279","numberDog":"CARD_CRED256/001","saldoAccount":"0","saldoAccountKZT":"0","typeDog":"CARD_CRED"}],"ibsoId":"1713126475"}}</con:responseContent><con:header><con:name>Server</con:name><con:value>GlassFish Server Open Source Edition  5.0</con:value></con:header><con:header><con:name>X-Powered-By</con:name><con:value>Servlet/3.1 JSP/2.3 (GlassFish Server Open Source Edition  5.0  Java/Oracle Corporation/1.8)</con:value></con:header></con:response></con:restMockAction></con:restMockService><con:restMockService id="39a77caf-badd-41a2-b676-916f107e7082" port="8080" path="/" host="BSB15-W14" name="REST MockService GetClientAccounts"><con:settings/><con:properties/><con:restMockAction name="/ABISWebServerRS/api/abis/client/account" method="POST" resourcePath="/ABISWebServerRS/api/abis/client/account" id="0dbf3b74-fdaa-4f8f-8cbb-35b46d646b2e"><con:settings/><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 1" id="bb52f4c5-acc8-41bc-a3c8-4d63567306b0" httpResponseStatus="200" mediaType="application/json" encoding="UTF-8"><con:settings/><con:responseContent>{"client":{"accounts":[{"currency":"KZT","filial":"021","lastOperationDate":"31-05-2017 20:41:35","number":"KZ464322204398H00073","openDate":"26-07-2011","saldo":"0","saldoKZT":"0","type":"RKO"},{"currency":"KZT","filial":"001","lastOperationDate":"20-08-2019 23:59:59","number":"KZ354322204398A02744","openDate":"05-03-2014","saldo":"90966.49","saldoKZT":"90966.49","type":"RKO"},{"currency":"KZT","filial":"021","lastOperationDate":"14-08-2019 10:32:06","number":"KZ664322204398H00198","openDate":"06-10-2011","saldo":".36","saldoKZT":".36","type":"CARD"},{"currency":"KZT","filial":"021","lastOperationDate":"03-05-2016 16:48:44","number":"KZ794322204398H02292","openDate":"10-07-2013","saldo":"1.62","saldoKZT":"1.62","type":"CARD"}],"credits":[],"ibsoId":"1771502862"}}</con:responseContent><con:header><con:name>Server</con:name><con:value>GlassFish Server Open Source Edition  5.0</con:value></con:header><con:header><con:name>X-Powered-By</con:name><con:value>Servlet/3.1 JSP/2.3 (GlassFish Server Open Source Edition  5.0  Java/Oracle Corporation/1.8)</con:value></con:header></con:response></con:restMockAction></con:restMockService><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>